<<<<<<<<<<< Docker compose mysql: mysql.yml
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
# Use root/example as user/password credentials
# CREATE USER 'user'@'%' IDENTIFIED BY 'user';
# GRANT ALL PRIVILEGES ON *.* TO 'user'@'%' WITH GRANT OPTION;
# flush privileges;
version: '3.1'

services:
  mysql:
    image: mysql/mysql-server
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    expose:
      - '3306'
    environment:
      MYSQL_ROOT_PASSWORD: root
    ports:
      - 3306:3306
    volumes:
      # Specify an absolute path mapping
      - /var/lib/mysql/data:/var/lib/mysql
      - ./my.cnf:/etc/my.cnf



<<<<<<<<<<< Docker mysql conf: my.cnf
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
# For advice on how to change settings please see
# http://dev.mysql.com/doc/refman/8.0/en/server-configuration-defaults.html

[mysqld]
#
# Remove leading # and set to the amount of RAM for the most important data
# cache in MySQL. Start at 70% of total RAM for dedicated server, else 10%.
# innodb_buffer_pool_size = 128M
#
# Remove leading # to turn on a very important data integrity option: logging
# changes to the binary log between backups.
# log_bin
#
# Remove leading # to set options mainly useful for reporting servers.
# The server defaults are faster for transactions and fast SELECTs.
# Adjust sizes as needed, experiment to find the optimal values.
# join_buffer_size = 128M
# sort_buffer_size = 2M
# read_rnd_buffer_size = 2M

# Remove leading # to revert to previous value for default_authentication_plugin,
# this will increase compatibility with older clients. For background, see:
# https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_default_authentication_plugin
# default-authentication-plugin=mysql_native_password
skip-host-cache
skip-name-resolve
datadir=/var/lib/mysql
socket=/var/lib/mysql/mysql.sock
secure-file-priv=/var/lib/mysql-files
user=mysql

#log-error=/var/log/mysqld.log
pid-file=/var/run/mysqld/mysqld.pid

# Accept connections from any IP address
bind-address=0.0.0.0


<<<<<<<<<<< Docker compose postgresql
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
# Postgresql
version: '3.1'

services:
  postgresql:
    image: mdillon/postgis
    restart: always
    expose:
      - '5432'
    environment:
      POSTGRES_PASSWORD: pg
    ports:
      - 5432:5432
    volumes:
      # Specify an absolute path mapping
      - /var/lib/postgresql/data:/var/lib/postgresql/data

